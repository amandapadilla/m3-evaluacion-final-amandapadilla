{"version":3,"sources":["services/getDataFromServer.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/Home.js","components/Header.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["getDataFromServer","fetch","then","response","json","Filters","props","getInputFilter","inputFilter","className","htmlFor","type","id","placeholder","onChange","value","CharacterCard","image","name","species","src","alt","CharacterList","characters","length","map","character","key","to","Home","Fragment","Header","CharacterDetail","origin","episode","status","App","getCharactersInfo","data","setState","results","state","renderCharacterDetail","bind","this","ev","persist","currentTarget","routerProps","parseInt","match","params","find","filter","myCharacter","toUpperCase","includes","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.04eafe58.chunk.js","sourcesContent":["const url =\n  \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\";\nconst getDataFromServer = () => {\n  return fetch(url).then(response => response.json());\n};\nexport { getDataFromServer };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Filters = props => {\n  const { getInputFilter, inputFilter } = props;\n  return (\n    <div className=\"form\">\n      <label htmlFor=\"textFilter\" className=\"form__label\">\n        Search a character\n      </label>\n      <input\n        className=\"form__input-text\"\n        type=\"text\"\n        id=\"textFilter\"\n        placeholder=\"Write here!\"\n        onChange={getInputFilter}\n        value={inputFilter}\n      />\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  getInputFilter: PropTypes.func.isRequired,\n  inputFilter: PropTypes.string.isRequired\n};\n\nexport default Filters;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CharacterCard = props => {\n  const { image, name, species } = props;\n  return (\n    <div className=\"card\">\n      <img src={image} alt={name} className=\"card__image\" />\n      <h2 className=\"card__name\">{name}</h2>\n      <p className=\"card__species\">{species}</p>\n    </div>\n  );\n};\n\nCharacterCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired\n};\n\nexport default CharacterCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CharacterCard from \"./CharacterCard\";\nimport { Link } from \"react-router-dom\";\n\nconst CharacterList = props => {\n  const { characters } = props;\n  if (characters.length === 0) {\n    return (\n      <div className=\"fail\">\n        <h2 className=\"fail__message\">\n          Hi! I'm Mr. Meeseeks, look at me! Sorry, there isn't a coincidence. Oh\n          no! I can't help you and will live foreveeeeeeeer!!!\n        </h2>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"list\">\n        <ul className=\"list__list-type\">\n          {characters.map(character => {\n            return (\n              <li className=\"list__item-character\" key={character.id}>\n                <Link to={`/detail/ ${character.id}`}>\n                  <CharacterCard\n                    name={character.name}\n                    image={character.image}\n                    species={character.species}\n                  />\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n};\nCharacterList.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default CharacterList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Filters from \"./Filters\";\nimport CharacterList from \"./CharacterList\";\n\nconst Home = props => {\n  const { getInputFilter, inputFilter, characters } = props;\n  return (\n    <React.Fragment>\n      <Filters getInputFilter={getInputFilter} inputFilter={inputFilter} />\n      <CharacterList characters={characters} inputFilter={inputFilter} />\n    </React.Fragment>\n  );\n};\nHome.propTypes = {\n  getInputFilter: PropTypes.func.isRequired,\n  inputFilter: PropTypes.string.isRequired\n};\nexport default Home;\n","import React from \"react\";\nimport \"../stylesheets/header.scss\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__effect\">\n        <img\n          className=\"header__logo\"\n          src=\"./images/logo.png\"\n          alt=\"Welcome to Rick and Morty characters directory\"\n        />\n        <img\n          className=\"header__animation\"\n          src=\"./images/animation.gif\"\n          alt=\"Welcome to Rick and Morty characters directory\"\n        />\n      </div>\n    </header>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst CharacterDetail = props => {\n  const { characters } = props;\n  if (characters) {\n    const { image, name, species, origin, episode, status } = characters;\n    const isDeadOrAlive = () => {\n      if (status === \"Alive\") {\n        return \"Alive\";\n      } else if (status === \"Dead\") {\n        return \"Dead\";\n      } else {\n        return \"It's not your f*ckin' bussines, jerk!\";\n      }\n    };\n    return (\n      <div className=\"detail\">\n        <img\n          src=\"./images/pickle.png\"\n          className=\"detail__pickle\"\n          alt=\"Pickle Rick!!!\"\n        />\n        <Link to=\"/\" className=\"detail__back-home\">\n          Back to hooome, mdfk!\n        </Link>\n        <div className=\"detail__card\">\n          <img src={image} alt={name} className=\"detail__card--image\" />\n          <h2 className=\"detail__card--name\">Name: {name}</h2>\n          <p className=\"detail__card--species\">Specie: {species}</p>\n          <p className=\"detail__card--origin\">Origin: {origin.name}</p>\n          <p className=\"detail__card--episode\">\n            You have seen me in {episode.length} episodes\n          </p>\n          <p className=\"detail__card--status\">Status: {isDeadOrAlive()}</p>\n          <img\n            src=\"./images/ricky-morty.png\"\n            alt=\"Rick and Morty\"\n            className=\"detail__rick-morty\"\n          />\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"fail\">\n        <p className=\"fail__message\">\n          Hi! I'm Mr. Meeseeks, look at me! Sorry, there isn't a coincidence. Oh\n          no! I can't help you and will live foreveeeeeeeer!!!\n        </p>\n      </div>\n    );\n  }\n};\n\nCharacterDetail.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default CharacterDetail;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { getDataFromServer } from \"../services/getDataFromServer\";\nimport Home from \"./Home\";\nimport Header from \"./Header\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport \"../stylesheets/App.scss\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      characters: [],\n      inputFilter: \"\"\n    };\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n    this.getInputFilter = this.getInputFilter.bind(this);\n  }\n  componentDidMount() {\n    this.getCharactersInfo();\n  }\n  getCharactersInfo = () => {\n    getDataFromServer().then(data => {\n      this.setState({\n        characters: data.results\n      });\n    });\n  };\n  getInputFilter(ev) {\n    ev.persist();\n    const inputFilter = ev.currentTarget.value;\n\n    this.setState({\n      inputFilter: inputFilter\n    });\n  }\n  renderCharacterDetail(routerProps) {\n    const id = parseInt(routerProps.match.params.id);\n    const character = this.state.characters.find(\n      character => character.id === id\n    );\n    return character;\n  }\n\n  render() {\n    const { inputFilter } = this.state;\n    const characters = this.state.characters.filter(myCharacter =>\n      myCharacter.name.toUpperCase().includes(inputFilter.toUpperCase())\n    );\n    return (\n      <div className=\"App\">\n        <Header />\n        <main className=\"main\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => {\n                return (\n                  <Home\n                    getInputFilter={this.getInputFilter}\n                    inputFilter={inputFilter}\n                    characters={characters}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/detail/:id\"\n              render={routerProps => {\n                return (\n                  <CharacterDetail\n                    routerProps={routerProps}\n                    characters={this.renderCharacterDetail(routerProps)}\n                  />\n                );\n              }}\n            />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport \"./stylesheets/index.scss\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}